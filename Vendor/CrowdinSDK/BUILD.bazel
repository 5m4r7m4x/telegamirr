load('@build_bazel_rules_swift//swift:swift.bzl', 'swift_library')
load(
  "//Vendor/rules_pods/BazelExtensions:extensions.bzl",
  "acknowledged_target",
  "gen_module_map",
  "gen_includes",
  "headermap",
  "umbrella_header"
)
# Add a config setting release for compilation mode
# Assume that people are using `opt` for release mode
# see the bazel user manual for more information
# https://docs.bazel.build/versions/master/be/general.html#config_setting
config_setting(
  name = "release",
  values = {
    "compilation_mode": "opt"
  }
)
config_setting(
  name = "osxCase",
  values = {
    "apple_platform_type": "macos"
  }
)
config_setting(
  name = "tvosCase",
  values = {
    "apple_platform_type": "tvos"
  }
)
config_setting(
  name = "watchosCase",
  values = {
    "apple_platform_type": "watchos"
  }
)
filegroup(
  name = "CrowdinSDK_package_hdrs",
  srcs = [
    "CrowdinSDK_cxx_direct_hdrs",
    "CrowdinSDK_direct_hdrs",
    "Core_cxx_direct_hdrs",
    "Core_direct_hdrs",
    "CrowdinProvider_direct_hdrs",
    "CrowdinAPI_direct_hdrs",
    "Screenshots_direct_hdrs",
    "RealtimeUpdate_direct_hdrs",
    "RefreshLocalization_direct_hdrs",
    "LoginFeature_direct_hdrs",
    "IntervalUpdate_direct_hdrs",
    "Settings_direct_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrowdinSDK_cxx_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrowdinSDK_cxx_public_hdrs",
  srcs = [
    ":Core_public_hdrs",
    ":CrowdinProvider_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrowdinSDK_cxx_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrowdinSDK_cxx_union_hdrs",
  srcs = [
    "CrowdinSDK_cxx_hdrs",
    "CrowdinSDK_hdrs",
    ":Core_hdrs",
    ":CrowdinProvider_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "CrowdinSDK_cxx_hmap",
  namespace = "CrowdinSDK",
  hdrs = [
    "CrowdinSDK_package_hdrs",
    ":CrowdinSDK_cxx_union_hdrs"
  ],
  deps = [
    ":Core_hmap",
    ":CrowdinProvider_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CrowdinSDK_cxx",
  enable_modules = 1,
  module_map = ":CrowdinSDK_extended_module_map",
  hdrs = [
    ":CrowdinSDK_cxx_hdrs",
    ":CrowdinSDK_cxx_hmap"
  ],
  pch = "pod_support/Headers/Private/CrowdinSDK-prefix.pch",
  sdk_frameworks = [
    "UIKit"
  ],
  deps = [
    ":Core",
    ":CrowdinProvider",
    ":CrowdinSDK_cxx_hmap",
    ":CrowdinSDK_extended_module_map"
  ],
  copts = [
    "-I$(GENDIR)/Vendor/CrowdinSDK/",
    "-std=c++14",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-I$(GENDIR)/Vendor/CrowdinSDK/CrowdinSDK_cxx_hmap.hmap",
    "-I."
  ] + [
    "-fmodule-name=CrowdinSDK",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "CrowdinSDK_cxx_acknowledgement",
  deps = [],
  value = "//Vendor/CrowdinSDK/pod_support_buildable:acknowledgement_fragment"
)
swift_library(
  name = "CrowdinSDK_swift",
  module_name = "CrowdinSDK",
  srcs = glob(
    [
      "Sources/CrowdinSDK/CrowdinAPI/**/*.swift",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.swift",
      "Sources/CrowdinSDK/Features/**/*.swift",
      "Sources/CrowdinSDK/Providers/Crowdin/**/*.swift",
      "Sources/CrowdinSDK/Resources/**/*.swift",
      "Sources/CrowdinSDK/Settings/**/*.swift",
    ]
  ),
  deps = [
    ":CrowdinSDK_hmap",
    ":CrowdinSDK_module_map",
    ":CrowdinSDK_umbrella_header",
    "//Vendor/Starscream:Starscream",
  ],
  data = [],
  copts = select(
    {
      "//conditions:default": [
        "-enable-testing",
        "-DDEBUG",
        "-Xcc",
        "-DPOD_CONFIGURATION_DEBUG=1",
        "-Xcc",
        "-DDEBUG=1"
      ],
      ":release": [
        "-Xcc",
        "-DPOD_CONFIGURATION_RELEASE=1"
      ]
    }
  ) + [
    "-DCOCOAPODS",
    "-Xcc",
    "-DCOCOAPODS=1",
    "-Xcc",
    "-I$(execpath CrowdinSDK_hmap)",
    "-Xcc",
    "-I.",
    "-Xcc",
    "-D__SWIFTC__",
    "-Xfrontend",
    "-no-clang-module-breadcrumbs",
    "-Xcc",
    "-fmodule-map-file=$(execpath CrowdinSDK_module_map)",
    "-import-underlying-module"
  ],
  swiftc_inputs = [
    ":CrowdinSDK_hmap",
    ":CrowdinSDK_module_map",
    ":CrowdinSDK_umbrella_header"
  ],
  generated_header_name = "CrowdinSDK-Swift.h",
  generates_header = True,
  features = [
    "swift.no_generated_module_map"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrowdinSDK_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrowdinSDK_public_hdrs",
  srcs = [
    ":Core_public_hdrs",
    ":CrowdinProvider_public_hdrs",
    ":CrowdinSDK_cxx_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrowdinSDK_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ) + [
    ":Core_hdrs",
    ":CrowdinProvider_hdrs",
    ":CrowdinSDK_cxx_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "CrowdinSDK_hmap",
  namespace = "CrowdinSDK",
  hdrs = [
    "CrowdinSDK_package_hdrs",
    ":CrowdinSDK_hdrs"
  ],
  deps = [
    ":Core_hmap",
    ":CrowdinProvider_hmap",
    ":CrowdinSDK_cxx_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CrowdinSDK",
  enable_modules = 1,
  module_map = ":CrowdinSDK_extended_module_map",
  hdrs = [
    ":CrowdinSDK_hdrs",
    ":CrowdinSDK_hmap"
  ],
  pch = "pod_support/Headers/Private/CrowdinSDK-prefix.pch",
  sdk_frameworks = [
    "UIKit"
  ],
  deps = [
    ":Core",
    ":CrowdinProvider",
    ":CrowdinSDK_cxx",
    ":CrowdinSDK_swift",
    ":CrowdinSDK_hmap",
    ":CrowdinSDK_extended_module_map"
  ],
  copts = [
    "-I$(GENDIR)/Vendor/CrowdinSDK/",
    "-fobjc-weak",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-I$(GENDIR)/Vendor/CrowdinSDK/CrowdinSDK_hmap.hmap",
    "-I."
  ] + [
    "-fmodule-name=CrowdinSDK",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "CrowdinSDK_acknowledgement",
  deps = [],
  value = "//Vendor/CrowdinSDK/pod_support_buildable:acknowledgement_fragment"
)
gen_module_map(
  name = "CrowdinSDK_module_map",
  module_name = "CrowdinSDK",
  hdrs = [
    "CrowdinSDK_public_hdrs"
  ],
  module_map_name = "CrowdinSDK.modulemap",
  umbrella_hdr = "CrowdinSDK_umbrella_header",
  visibility = [
    "//visibility:public"
  ]
)
umbrella_header(
  name = "CrowdinSDK_umbrella_header",
  hdrs = [
    "CrowdinSDK_public_hdrs"
  ]
)
gen_module_map(
  name = "CrowdinSDK_extended_module_map",
  module_name = "CrowdinSDK",
  hdrs = [
    "CrowdinSDK_public_hdrs"
  ],
  swift_hdr = "../CrowdinSDK-Swift.h",
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_cxx_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.h",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.hpp",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.hxx"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_cxx_public_hdrs",
  srcs = glob(
    [
      "Sources/CrowdinSDK/CrowdinSDK/**/*.h",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.hpp",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.hxx"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_cxx_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.h",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.hpp",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.hxx"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_cxx_union_hdrs",
  srcs = [
    "Core_cxx_hdrs",
    "CrowdinSDK_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "Core_cxx_hmap",
  namespace = "CrowdinSDK",
  hdrs = [
    "CrowdinSDK_package_hdrs",
    ":Core_cxx_union_hdrs"
  ],
  deps = [],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Core_cxx",
  enable_modules = 1,
  srcs = glob(
    [
      "Sources/CrowdinSDK/CrowdinSDK/**/*.cc",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.cpp",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.cxx",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.mm"
    ],
    exclude = [
      "Sources/CrowdinSDK/CrowdinSDK/**/*.S",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.c",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.m",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.s"
    ]
  ),
  module_map = ":CrowdinSDK_extended_module_map",
  hdrs = [
    ":Core_cxx_hdrs",
    ":Core_cxx_hmap"
  ],
  pch = "pod_support/Headers/Private/CrowdinSDK-prefix.pch",
  sdk_frameworks = [
    "UIKit"
  ],
  deps = [
    ":Core_cxx_hmap",
    ":CrowdinSDK_extended_module_map"
  ],
  copts = [
    "-I$(GENDIR)/Vendor/CrowdinSDK/",
    "-std=c++14",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-I$(GENDIR)/Vendor/CrowdinSDK/Core_cxx_hmap.hmap",
    "-I."
  ] + [
    "-fmodule-name=CrowdinSDK",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "Core_cxx_acknowledgement",
  deps = [],
  value = "//Vendor/CrowdinSDK/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "Core_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.h",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.hpp",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.hxx"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_public_hdrs",
  srcs = glob(
    [
      "Sources/CrowdinSDK/CrowdinSDK/**/*.h",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.hpp",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.hxx"
    ]
  ) + [
    ":Core_cxx_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.h",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.hpp",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.hxx"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Core_union_hdrs",
  srcs = [
    "Core_hdrs",
    "CrowdinSDK_hdrs",
    ":Core_cxx_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "Core_hmap",
  namespace = "CrowdinSDK",
  hdrs = [
    "CrowdinSDK_package_hdrs",
    ":Core_union_hdrs"
  ],
  deps = [
    ":Core_cxx_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Core",
  enable_modules = 1,
  srcs = glob(
    [
      "Sources/CrowdinSDK/CrowdinSDK/**/*.S",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.c",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.m",
      "Sources/CrowdinSDK/CrowdinSDK/**/*.s"
    ]
  ),
  module_map = ":CrowdinSDK_extended_module_map",
  hdrs = [
    ":Core_hdrs",
    ":Core_hmap"
  ],
  pch = "pod_support/Headers/Private/CrowdinSDK-prefix.pch",
  sdk_frameworks = [
    "UIKit"
  ],
  deps = [
    ":Core_cxx",
    ":CrowdinSDK_swift",
    ":Core_hmap",
    ":CrowdinSDK_extended_module_map"
  ],
  copts = [
    "-I$(GENDIR)/Vendor/CrowdinSDK/",
    "-fobjc-weak",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-I$(GENDIR)/Vendor/CrowdinSDK/Core_hmap.hmap",
    "-I."
  ] + [
    "-fmodule-name=CrowdinSDK",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "Core_acknowledgement",
  deps = [],
  value = "//Vendor/CrowdinSDK/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "CrowdinProvider_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrowdinProvider_public_hdrs",
  srcs = [
    ":Core_public_hdrs",
    ":CrowdinAPI_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrowdinProvider_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrowdinProvider_union_hdrs",
  srcs = [
    "CrowdinProvider_hdrs",
    "CrowdinSDK_hdrs",
    ":Core_hdrs",
    ":CrowdinAPI_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "CrowdinProvider_hmap",
  namespace = "CrowdinSDK",
  hdrs = [
    "CrowdinSDK_package_hdrs",
    ":CrowdinProvider_union_hdrs"
  ],
  deps = [
    ":Core_hmap",
    ":CrowdinAPI_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CrowdinProvider",
  enable_modules = 1,
  module_map = ":CrowdinSDK_extended_module_map",
  hdrs = [
    ":CrowdinProvider_hdrs",
    ":CrowdinProvider_hmap"
  ],
  pch = "pod_support/Headers/Private/CrowdinSDK-prefix.pch",
  sdk_frameworks = [
    "UIKit"
  ],
  deps = [
    ":Core",
    ":CrowdinAPI",
    ":CrowdinSDK_swift",
    ":CrowdinProvider_hmap",
    ":CrowdinSDK_extended_module_map"
  ],
  copts = [
    "-I$(GENDIR)/Vendor/CrowdinSDK/",
    "-fobjc-weak",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-I$(GENDIR)/Vendor/CrowdinSDK/CrowdinProvider_hmap.hmap",
    "-I."
  ] + [
    "-fmodule-name=CrowdinSDK",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "CrowdinProvider_acknowledgement",
  deps = [],
  value = "//Vendor/CrowdinSDK/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "CrowdinAPI_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrowdinAPI_public_hdrs",
  srcs = [
    ":Core_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrowdinAPI_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "CrowdinAPI_union_hdrs",
  srcs = [
    "CrowdinAPI_hdrs",
    "CrowdinSDK_hdrs",
    ":Core_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "CrowdinAPI_hmap",
  namespace = "CrowdinSDK",
  hdrs = [
    "CrowdinSDK_package_hdrs",
    ":CrowdinAPI_union_hdrs"
  ],
  deps = [
    "//Vendor/BaseAPI:BaseAPI",
    ":Core_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "CrowdinAPI",
  enable_modules = 1,
  module_map = ":CrowdinSDK_extended_module_map",
  hdrs = [
    ":CrowdinAPI_hdrs",
    ":CrowdinAPI_hmap"
  ],
  pch = "pod_support/Headers/Private/CrowdinSDK-prefix.pch",
  sdk_frameworks = [
    "UIKit"
  ],
  deps = [
    "//Vendor/BaseAPI:BaseAPI",
    ":Core",
    ":CrowdinSDK_swift",
    ":CrowdinAPI_hmap",
    ":CrowdinSDK_extended_module_map"
  ],
  copts = [
    "-I$(GENDIR)/Vendor/CrowdinSDK/",
    "-fobjc-weak",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-I$(GENDIR)/Vendor/CrowdinSDK/CrowdinAPI_hmap.hmap",
    "-I."
  ] + [
    "-fmodule-name=CrowdinSDK",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "CrowdinAPI_acknowledgement",
  deps = [
    "//Vendor/BaseAPI:BaseAPI_acknowledgement"
  ],
  value = "//Vendor/CrowdinSDK/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "Screenshots_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Screenshots_public_hdrs",
  srcs = [
    ":Core_public_hdrs",
    ":CrowdinAPI_public_hdrs",
    ":CrowdinProvider_public_hdrs",
    ":LoginFeature_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Screenshots_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Screenshots_union_hdrs",
  srcs = [
    "Screenshots_hdrs",
    "CrowdinSDK_hdrs",
    ":Core_hdrs",
    ":CrowdinAPI_hdrs",
    ":CrowdinProvider_hdrs",
    ":LoginFeature_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "Screenshots_hmap",
  namespace = "CrowdinSDK",
  hdrs = [
    "CrowdinSDK_package_hdrs",
    ":Screenshots_union_hdrs"
  ],
  deps = [
    ":Core_hmap",
    ":CrowdinAPI_hmap",
    ":CrowdinProvider_hmap",
    ":LoginFeature_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Screenshots",
  enable_modules = 1,
  module_map = ":CrowdinSDK_extended_module_map",
  hdrs = [
    ":Screenshots_hdrs",
    ":Screenshots_hmap"
  ],
  pch = "pod_support/Headers/Private/CrowdinSDK-prefix.pch",
  sdk_frameworks = [
    "UIKit"
  ],
  deps = [
    ":Core",
    ":CrowdinAPI",
    ":CrowdinProvider",
    ":CrowdinSDK_swift",
    ":LoginFeature",
    ":Screenshots_hmap",
    ":CrowdinSDK_extended_module_map"
  ],
  copts = [
    "-I$(GENDIR)/Vendor/CrowdinSDK/",
    "-fobjc-weak",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-I$(GENDIR)/Vendor/CrowdinSDK/Screenshots_hmap.hmap",
    "-I."
  ] + [
    "-fmodule-name=CrowdinSDK",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "Screenshots_acknowledgement",
  deps = [],
  value = "//Vendor/CrowdinSDK/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "RealtimeUpdate_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "RealtimeUpdate_public_hdrs",
  srcs = [
    ":Core_public_hdrs",
    ":CrowdinAPI_public_hdrs",
    ":CrowdinProvider_public_hdrs",
    ":LoginFeature_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "RealtimeUpdate_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "RealtimeUpdate_union_hdrs",
  srcs = [
    "RealtimeUpdate_hdrs",
    "CrowdinSDK_hdrs",
    ":Core_hdrs",
    ":CrowdinAPI_hdrs",
    ":CrowdinProvider_hdrs",
    ":LoginFeature_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "RealtimeUpdate_hmap",
  namespace = "CrowdinSDK",
  hdrs = [
    "CrowdinSDK_package_hdrs",
    ":RealtimeUpdate_union_hdrs"
  ],
  deps = [
    "//Vendor/Starscream:Starscream",
    ":Core_hmap",
    ":CrowdinAPI_hmap",
    ":CrowdinProvider_hmap",
    ":LoginFeature_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "RealtimeUpdate",
  enable_modules = 1,
  module_map = ":CrowdinSDK_extended_module_map",
  hdrs = [
    ":RealtimeUpdate_hdrs",
    ":RealtimeUpdate_hmap"
  ],
  pch = "pod_support/Headers/Private/CrowdinSDK-prefix.pch",
  sdk_frameworks = [
    "UIKit"
  ],
  deps = [
    "//Vendor/Starscream:Starscream",
    ":Core",
    ":CrowdinAPI",
    ":CrowdinProvider",
    ":CrowdinSDK_swift",
    ":LoginFeature",
    ":RealtimeUpdate_hmap",
    ":CrowdinSDK_extended_module_map"
  ],
  copts = [
    "-I$(GENDIR)/Vendor/CrowdinSDK/",
    "-fobjc-weak",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-I$(GENDIR)/Vendor/CrowdinSDK/RealtimeUpdate_hmap.hmap",
    "-I."
  ] + [
    "-fmodule-name=CrowdinSDK",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "RealtimeUpdate_acknowledgement",
  deps = [
    "//Vendor/Starscream:Starscream_acknowledgement"
  ],
  value = "//Vendor/CrowdinSDK/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "RefreshLocalization_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "RefreshLocalization_public_hdrs",
  srcs = [
    ":Core_public_hdrs",
    ":CrowdinAPI_public_hdrs",
    ":CrowdinProvider_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "RefreshLocalization_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "RefreshLocalization_union_hdrs",
  srcs = [
    "RefreshLocalization_hdrs",
    "CrowdinSDK_hdrs",
    ":Core_hdrs",
    ":CrowdinAPI_hdrs",
    ":CrowdinProvider_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "RefreshLocalization_hmap",
  namespace = "CrowdinSDK",
  hdrs = [
    "CrowdinSDK_package_hdrs",
    ":RefreshLocalization_union_hdrs"
  ],
  deps = [
    ":Core_hmap",
    ":CrowdinAPI_hmap",
    ":CrowdinProvider_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "RefreshLocalization",
  enable_modules = 1,
  module_map = ":CrowdinSDK_extended_module_map",
  hdrs = [
    ":RefreshLocalization_hdrs",
    ":RefreshLocalization_hmap"
  ],
  pch = "pod_support/Headers/Private/CrowdinSDK-prefix.pch",
  sdk_frameworks = [
    "UIKit"
  ],
  deps = [
    ":Core",
    ":CrowdinAPI",
    ":CrowdinProvider",
    ":CrowdinSDK_swift",
    ":RefreshLocalization_hmap",
    ":CrowdinSDK_extended_module_map"
  ],
  copts = [
    "-I$(GENDIR)/Vendor/CrowdinSDK/",
    "-fobjc-weak",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-I$(GENDIR)/Vendor/CrowdinSDK/RefreshLocalization_hmap.hmap",
    "-I."
  ] + [
    "-fmodule-name=CrowdinSDK",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "RefreshLocalization_acknowledgement",
  deps = [],
  value = "//Vendor/CrowdinSDK/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "LoginFeature_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "LoginFeature_public_hdrs",
  srcs = [
    ":Core_public_hdrs",
    ":CrowdinAPI_public_hdrs",
    ":CrowdinProvider_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "LoginFeature_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "LoginFeature_union_hdrs",
  srcs = [
    "LoginFeature_hdrs",
    "CrowdinSDK_hdrs",
    ":Core_hdrs",
    ":CrowdinAPI_hdrs",
    ":CrowdinProvider_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "LoginFeature_hmap",
  namespace = "CrowdinSDK",
  hdrs = [
    "CrowdinSDK_package_hdrs",
    ":LoginFeature_union_hdrs"
  ],
  deps = [
    "//Vendor/BaseAPI:BaseAPI",
    ":Core_hmap",
    ":CrowdinAPI_hmap",
    ":CrowdinProvider_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "LoginFeature",
  enable_modules = 1,
  module_map = ":CrowdinSDK_extended_module_map",
  hdrs = [
    ":LoginFeature_hdrs",
    ":LoginFeature_hmap"
  ],
  pch = "pod_support/Headers/Private/CrowdinSDK-prefix.pch",
  sdk_frameworks = [
    "UIKit"
  ],
  deps = [
    "//Vendor/BaseAPI:BaseAPI",
    ":Core",
    ":CrowdinAPI",
    ":CrowdinProvider",
    ":CrowdinSDK_swift",
    ":LoginFeature_hmap",
    ":CrowdinSDK_extended_module_map"
  ],
  copts = [
    "-I$(GENDIR)/Vendor/CrowdinSDK/",
    "-fobjc-weak",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-I$(GENDIR)/Vendor/CrowdinSDK/LoginFeature_hmap.hmap",
    "-I."
  ] + [
    "-fmodule-name=CrowdinSDK",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "LoginFeature_acknowledgement",
  deps = [
    "//Vendor/BaseAPI:BaseAPI_acknowledgement"
  ],
  value = "//Vendor/CrowdinSDK/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "IntervalUpdate_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "IntervalUpdate_public_hdrs",
  srcs = [
    ":Core_public_hdrs",
    ":CrowdinAPI_public_hdrs",
    ":CrowdinProvider_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "IntervalUpdate_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "IntervalUpdate_union_hdrs",
  srcs = [
    "IntervalUpdate_hdrs",
    "CrowdinSDK_hdrs",
    ":Core_hdrs",
    ":CrowdinAPI_hdrs",
    ":CrowdinProvider_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "IntervalUpdate_hmap",
  namespace = "CrowdinSDK",
  hdrs = [
    "CrowdinSDK_package_hdrs",
    ":IntervalUpdate_union_hdrs"
  ],
  deps = [
    ":Core_hmap",
    ":CrowdinAPI_hmap",
    ":CrowdinProvider_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "IntervalUpdate",
  enable_modules = 1,
  module_map = ":CrowdinSDK_extended_module_map",
  hdrs = [
    ":IntervalUpdate_hdrs",
    ":IntervalUpdate_hmap"
  ],
  pch = "pod_support/Headers/Private/CrowdinSDK-prefix.pch",
  sdk_frameworks = [
    "UIKit"
  ],
  deps = [
    ":Core",
    ":CrowdinAPI",
    ":CrowdinProvider",
    ":CrowdinSDK_swift",
    ":IntervalUpdate_hmap",
    ":CrowdinSDK_extended_module_map"
  ],
  copts = [
    "-I$(GENDIR)/Vendor/CrowdinSDK/",
    "-fobjc-weak",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-I$(GENDIR)/Vendor/CrowdinSDK/IntervalUpdate_hmap.hmap",
    "-I."
  ] + [
    "-fmodule-name=CrowdinSDK",
    "-fmodules"
  ],
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "IntervalUpdate_acknowledgement",
  deps = [],
  value = "//Vendor/CrowdinSDK/pod_support_buildable:acknowledgement_fragment"
)
filegroup(
  name = "Settings_direct_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Settings_public_hdrs",
  srcs = [
    ":Core_public_hdrs",
    ":CrowdinAPI_public_hdrs",
    ":CrowdinProvider_public_hdrs",
    ":IntervalUpdate_public_hdrs",
    ":LoginFeature_public_hdrs",
    ":RealtimeUpdate_public_hdrs",
    ":RefreshLocalization_public_hdrs",
    ":Screenshots_public_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Settings_hdrs",
  srcs = glob(
    [
      "pod_support/Headers/Public/**/*"
    ]
  ),
  visibility = [
    "//visibility:public"
  ]
)
filegroup(
  name = "Settings_union_hdrs",
  srcs = [
    "Settings_hdrs",
    "CrowdinSDK_hdrs",
    ":Core_hdrs",
    ":CrowdinAPI_hdrs",
    ":CrowdinProvider_hdrs",
    ":IntervalUpdate_hdrs",
    ":LoginFeature_hdrs",
    ":RealtimeUpdate_hdrs",
    ":RefreshLocalization_hdrs",
    ":Screenshots_hdrs"
  ],
  visibility = [
    "//visibility:public"
  ]
)
headermap(
  name = "Settings_hmap",
  namespace = "CrowdinSDK",
  hdrs = [
    "CrowdinSDK_package_hdrs",
    ":Settings_union_hdrs"
  ],
  deps = [
    ":Core_hmap",
    ":CrowdinAPI_hmap",
    ":CrowdinProvider_hmap",
    ":IntervalUpdate_hmap",
    ":LoginFeature_hmap",
    ":RealtimeUpdate_hmap",
    ":RefreshLocalization_hmap",
    ":Screenshots_hmap"
  ],
  visibility = [
    "//visibility:public"
  ]
)
objc_library(
  name = "Settings",
  enable_modules = 1,
  module_map = ":CrowdinSDK_extended_module_map",
  hdrs = [
    ":Settings_hdrs",
    ":Settings_hmap"
  ],
  pch = "pod_support/Headers/Private/CrowdinSDK-prefix.pch",
  sdk_frameworks = [
    "UIKit"
  ],
  deps = [
    ":Core",
    ":CrowdinAPI",
    ":CrowdinProvider",
    ":CrowdinSDK_swift",
    ":IntervalUpdate",
    ":LoginFeature",
    ":RealtimeUpdate",
    ":RefreshLocalization",
    ":Screenshots",
    ":Settings_hmap",
    ":CrowdinSDK_extended_module_map"
  ],
  copts = [
    "-I$(GENDIR)/Vendor/CrowdinSDK/",
    "-fobjc-weak",
    "-Wno-everything",
    "-Wnon-modular-include-in-framework-module",
    "-g",
    "-stdlib=libc++",
    "-DCOCOAPODS=1",
    "-DOBJC_OLD_DISPATCH_PROTOTYPES=0",
    "-fdiagnostics-show-note-include-stack",
    "-fno-common",
    "-fembed-bitcode-marker",
    "-fmessage-length=0",
    "-fpascal-strings",
    "-fstrict-aliasing",
    "-Wno-error=nonportable-include-path"
  ] + select(
    {
      "//conditions:default": [
        "-DDEBUG=1",
        "-DPOD_CONFIGURATION_DEBUG=1"
      ],
      ":release": [
        "-DPOD_CONFIGURATION_RELEASE=1",
        "-DNS_BLOCK_ASSERTIONS=1"
      ]
    }
  ) + [
    "-I$(GENDIR)/Vendor/CrowdinSDK/Settings_hmap.hmap",
    "-I."
  ] + [
    "-fmodule-name=CrowdinSDK",
    "-fmodules"
  ],
  data = select(
    {
      "//conditions:default": glob(
        [
          "Sources/CrowdinSDK/Resources/Settings/*.storyboard",
          "Sources/CrowdinSDK/Resources/Settings/*.xcassets",
          "Sources/CrowdinSDK/Resources/Settings/*.xib"
        ]
      )
    }
  ),
  visibility = [
    "//visibility:public"
  ]
)
acknowledged_target(
  name = "Settings_acknowledgement",
  deps = [],
  value = "//Vendor/CrowdinSDK/pod_support_buildable:acknowledgement_fragment"
)